apiVersion: apps/v1
kind: Deployment
metadata:
  name: marketing-sm
spec:
  selector:
    matchLabels:
      app: marketing-sm
  template:
    metadata:
      labels:
        app: marketing-sm
    spec:
      containers:
        - name: marketing-sm
          image: marketing-sm:latest
          ports:
            - containerPort: 8000
          env:
            - name: GOOGLE_APPLICATION_CREDENTIALS
              value: <GOOGLE_CLOUD_CREDENTIALS_FILE> #/var/gcp/credentials/application_default_credentials.json
            - name: GOOGLE_API_PROJECT
              value: <GOOGLE_CLOUD_API_PROJECT>
            - name: APIFY_API_TOKEN
              value: <APIFY_API_TOKEN>
          imagePullPolicy: "ifNotPresent"
          volumeMounts:
            - name: gcp-credentials-volume
              mountPath: /var/gcp/credentials
              readOnly: true
            - name: data-volume
              mountPath: ./app/data
      volumes:
        - name: data-volume
          persistentVolumeClaim:
            claimName: data-pvc
        - name: gcp-credentials-volume
          secret:
            secretName: gcp-credentials

---
apiVersion: v1
kind: Service
metadata:
  name: marketing-sm
  labels:
    app: marketing-sm
spec:
  selector:
    app: marketing-sm
  type: NodePort
  ports:
    - protocol: TCP
      port: 8000
      targetPort: 8000
      nodePort: 30007
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: data-pv-volume
spec:
  capacity:
    storage: 1Gi
  volumeMode: Filesystem
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: <PATH_TO_REPO>/personal/marketing_sm/app/data/
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: data-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
  storageClassName: ""
  volumeName: data-pv-volume  # Specify the name of your existing PV here

